
// This wraps the moving pieces to hide their movement
.off-canvas-wrap {
  @include respond-to(knee-up) {
    @include prevent-flicker;
    position: relative;
    overflow: hidden;
  }	  
}

.banner .btn {
  
  > .swapper {
    display: block;
    width: 28px;
    height: 25px;
    margin: 0 auto;
    position: relative;

    > .icon {
      position: absolute;
      top: 0;
      left: 0;
      transition-timing-function: cubic-bezier(0,0,.7,1.9);
      transition-duration: $navburger-transition-time;
      transition-property: opacity, transform;
      transform-origin: 50% 50%;
  
    }
    
  }

  &.nav-is-open .icon:first-child,
  .icon:last-child {
    opacity: 0;
    transform: scale(0);
  }

  .icon:first-child,
  &.nav-is-open .icon:last-child {
    opacity: 1;
    transform: scale(1);
  }

}

.nav {

  // Remove from flow
  @extend %pos-abs;

  @include respond-to(hand-only) {
    z-index: 0;
    left: 0;
    right: 0;  
  }
  
          
  @include respond-to(knee-up) {
    
    // needs a width
    width: $main-menu-width;
    
    &.has-secondary { width: $both-menus-width; }
    
    // remove from flow, take up full height
    top: 0;
    bottom: 0;
    z-index: 1;
    background-color: $header-and-nav-bg;
    
    // handle the possibility that the content isn't big enough for the nav
    overflow: auto; 
    
    transition-delay: 0s;
    transition-duration: $main-menu-slide-duration;
        
    .panels {
      transform: none !important;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
    
    .panel {
      position: absolute;
      top: 0;
      bottom: 0;
      z-index: 1;
    }

    
  }
  
  @include respond-to(knee-only) {
    transform: translate3d(-100%,0,0);
    
    &.nav-is-open {
      transform: none;
      transition-delay: $main-menu-slide-duration;
    }
  }
  
  .logo-text {
    text-align: center;
    @include rem(margin-top, $font-size-xs);
  }
    
  .project-name {
    @include rem(margin-bottom, $font-size-xs);
  }
  
    
}

#main_menu {
  @include respond-to(knee-up) {
    width: $main-menu-width;
    background-color: $header-and-nav-bg;
  }
}

#secondary_menu {
  @include respond-to(knee-up) {
    right: 0;
    width: $secondary-menu-width;
    border-left: #444 1px solid;
    background-color: palette(gray,mid-dark);
  }
}

.main {
  @extend %prevent-flicker;
  position: relative;
  z-index: 0;

  transition-timing-function: $ease-out-cubic;
  transition-duration: .2s;
  
  .csstransforms & {
    transition-property: transform;
  }

  @include respond-to(hand-only) {
    
    transition-delay: $main-menu-slide-duration;
    transition-property: top;

  }  
  
  @include respond-to(knee-only) {
    &.nav-is-open {
      transition-delay: 0s;
      position: relative;

      left: $main-menu-width;
      
      .csstransforms & {
        left: auto;
        transform: translate3d($main-menu-width,0,0);
      }

      &.has-secondary {
        left: $both-menus-width;
      
        .csstransforms & {
          left: auto;
          transform: translate3d($both-menus-width,0,0);
        }
        
      }
    }
  }

  @include respond-to(desk-up) {

    @include rem(padding-left, 8px);
    @include rem(padding-right, 8px);
    
    margin-left: $main-menu-width;
    &.has-secondary {
      margin-left: $both-menus-width;
    }

    
  }

}

.close-nav {
  @extend %pos-abs;
  top: 0;
  right: 0;
  left: 0;
  bottom: 100%;   // effectively the box is zero px height

  background-color: rgba(0,0,0,.35);
  cursor: pointer;

  transition: opacity .4s $ease-out-cubic;
  opacity: 0;
  
  .csstransforms3d & {
    @extend %prevent-flicker;
    bottom: 0;
    transform: scale(0);
  }
  
  @include respond-to(knee-down) {
    &.nav-is-open {
      // expand to full size
      bottom: 0;
      opacity: 1;
      cursor:pointer;
      
      .csstransforms3d & {
        transform: scale(1);
      }
    }
  }

}
